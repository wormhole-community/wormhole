{"version":3,"sources":["../node_modules/@certusone/wormhole-sdk/lib/esm/solana/nft/nft_bridge.js","../node_modules/@certusone/wormhole-sdk/lib/esm/solana/nft/nft_bridge_bg.js","../node_modules/webpack/buildin/harmony-module.js"],"names":["cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","takeObject","ret","dropObject","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","ptr_1","mem","offset","code","charCodeAt","slice","isLikeNone","x","cachegetInt32Memory0","getInt32Memory0","Int32Array","cachegetFloat64Memory0","debugString","val","type","description","name_1","name","isArray","length_1","debug","i","className","builtInMatches","exec","toString","call","JSON","stringify","_","Error","message","stack","passArray8ToWasm0","transfer_native_ix","program_id","bridge_id","payer","from","mint","nonce","target_address","target_chain","ptr0","len0","ptr1","len1","ptr2","len2","ptr3","len3","ptr4","len4","ptr5","len5","ptr6","len6","transfer_wrapped_ix","from_owner","token_chain","token_address","token_id","ptr7","len7","ptr8","len8","complete_transfer_native_ix","to_authority","vaa","complete_transfer_wrapped_ix","complete_transfer_wrapped_meta_ix","upgrade_contract_ix","spill","register_chain_ix","getArrayU8FromWasm0","emitter_address","retptr","r0","r1","v1","approval_authority_address","wrapped_address","v3","wrapped_meta_address","mint_address","v2","spl_meta_address","parse_wrapped_meta","data","parse_endpoint_registration","_assertClass","instance","klass","u32CvtShim","Uint32Array","uint64CvtShim","BigUint64Array","cachegetUint32Memory0","passArrayJsValueToWasm0","array","init","handleError","f","args","apply","this","e","Hash","value","__wrap","Object","create","prototype","__destroy_into_raw","free","equals","other","toBytes","v0","Instruction","Instructions","instruction","Message","defineProperty","get","arg0","enumerable","configurable","Pubkey","isOnCurve","createWithSeed","base","seed","owner","createProgramAddress","seeds","findProgramAddress","SystemInstruction","createAccount","from_pubkey","to_pubkey","lamports","space","low0","high0","low1","high1","createAccountWithSeed","low2","high2","assign","pubkey","assignWithSeed","transfer","transferWithSeed","from_base","from_seed","allocate","allocateWithSeed","address","createNonceAccount","nonce_pubkey","authority","advanceNonceAccount","authorized_pubkey","withdrawNonceAccount","authorizeNonceAccount","new_authority","__wbindgen_json_parse","arg1","parse","__wbg_instruction_new","__wbindgen_object_drop_ref","__wbg_pubkey_new","__wbindgen_string_get","__wbindgen_is_undefined","__wbindgen_string_new","__wbindgen_number_get","Float64Array","__wbindgen_number_new","__wbg_debug_104e10fa490af5d4","console","__wbg_error_009e67eab9c16665","error","__wbg_info_44b510682aa2cf74","info","__wbg_log_4989d5b00a0cc297","log","__wbg_warn_f9b80af3c73d7193","warn","__wbg_new_693216e109162396","__wbg_stack_0ddaca5d1abfb52f","__wbg_error_09919627ac0992f5","__wbg_new_949bbc1147195c4e","__wbindgen_is_function","__wbindgen_is_object","__wbg_next_c4151d46d5fa7097","next","__wbg_next_7720502039b96d00","arguments","__wbg_done_b06cf0578e89ff68","done","__wbg_value_e74a542443d92451","__wbg_iterator_4fc4ce93e6b92958","Symbol","iterator","__wbg_get_4d0f21c2f823742e","Reflect","__wbg_call_888d259a5fefc347","__wbg_newwithlength_75ee2b96c288e6bc","__wbg_set_1820441f7fb79aad","arg2","__wbg_isArray_eb7ad55f2da67dde","__wbg_push_284486ca27c6aa8b","__wbg_values_364ae56c608e6824","values","__wbg_buffer_397eaa4d72ee94dd","__wbg_new_a7ce447f15ff496f","__wbg_set_969ad0a60e51d320","__wbg_length_1eb8fc608a0d4cdb","__wbg_instanceof_Uint8Array_08a1f3a179095e76","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_rethrow","__wbindgen_memory","exports","originalModule","webpackPolyfill","children","l"],"mappings":"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","file":"static/js/9.5f8a8069.chunk.js","sourcesContent":["export * from \"./nft_bridge_bg.js\";\n","import * as wasm from './nft_bridge_bg.wasm';\nvar lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\nvar cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\ncachedTextDecoder.decode();\nvar cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\nvar heap = new Array(32).fill(undefined);\nheap.push(undefined, null, true, false);\nvar heap_next = heap.length;\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length)\n        heap.push(heap.length + 1);\n    var idx = heap_next;\n    heap_next = heap[idx];\n    heap[idx] = obj;\n    return idx;\n}\nfunction getObject(idx) { return heap[idx]; }\nfunction dropObject(idx) {\n    if (idx < 36)\n        return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\nfunction takeObject(idx) {\n    var ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\nvar WASM_VECTOR_LEN = 0;\nvar lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\nvar cachedTextEncoder = new lTextEncoder('utf-8');\nvar encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n        return cachedTextEncoder.encodeInto(arg, view);\n    }\n    : function (arg, view) {\n        var buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n            read: arg.length,\n            written: buf.length\n        };\n    });\nfunction passStringToWasm0(arg, malloc, realloc) {\n    if (realloc === undefined) {\n        var buf = cachedTextEncoder.encode(arg);\n        var ptr_1 = malloc(buf.length);\n        getUint8Memory0().subarray(ptr_1, ptr_1 + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr_1;\n    }\n    var len = arg.length;\n    var ptr = malloc(len);\n    var mem = getUint8Memory0();\n    var offset = 0;\n    for (; offset < len; offset++) {\n        var code = arg.charCodeAt(offset);\n        if (code > 0x7F)\n            break;\n        mem[ptr + offset] = code;\n    }\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        var view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        var ret = encodeString(arg, view);\n        offset += ret.written;\n    }\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\nvar cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\nvar cachegetFloat64Memory0 = null;\nfunction getFloat64Memory0() {\n    if (cachegetFloat64Memory0 === null || cachegetFloat64Memory0.buffer !== wasm.memory.buffer) {\n        cachegetFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachegetFloat64Memory0;\n}\nfunction debugString(val) {\n    // primitive types\n    var type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return \"\" + val;\n    }\n    if (type == 'string') {\n        return \"\\\"\" + val + \"\\\"\";\n    }\n    if (type == 'symbol') {\n        var description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        }\n        else {\n            return \"Symbol(\" + description + \")\";\n        }\n    }\n    if (type == 'function') {\n        var name_1 = val.name;\n        if (typeof name_1 == 'string' && name_1.length > 0) {\n            return \"Function(\" + name_1 + \")\";\n        }\n        else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        var length_1 = val.length;\n        var debug = '[';\n        if (length_1 > 0) {\n            debug += debugString(val[0]);\n        }\n        for (var i = 1; i < length_1; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    var builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    var className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    }\n    else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        }\n        catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return val.name + \": \" + val.message + \"\\n\" + val.stack;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\nfunction passArray8ToWasm0(arg, malloc) {\n    var ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} message\n* @param {string} from\n* @param {string} mint\n* @param {number} nonce\n* @param {Uint8Array} target_address\n* @param {number} target_chain\n* @returns {any}\n*/\nexport function transfer_native_ix(program_id, bridge_id, payer, message, from, mint, nonce, target_address, target_chain) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(from, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ptr5 = passStringToWasm0(mint, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len5 = WASM_VECTOR_LEN;\n    var ptr6 = passArray8ToWasm0(target_address, wasm.__wbindgen_malloc);\n    var len6 = WASM_VECTOR_LEN;\n    var ret = wasm.transfer_native_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, ptr5, len5, nonce, ptr6, len6, target_chain);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} message\n* @param {string} from\n* @param {string} from_owner\n* @param {number} token_chain\n* @param {Uint8Array} token_address\n* @param {Uint8Array} token_id\n* @param {number} nonce\n* @param {Uint8Array} target_address\n* @param {number} target_chain\n* @returns {any}\n*/\nexport function transfer_wrapped_ix(program_id, bridge_id, payer, message, from, from_owner, token_chain, token_address, token_id, nonce, target_address, target_chain) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passStringToWasm0(from, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ptr5 = passStringToWasm0(from_owner, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len5 = WASM_VECTOR_LEN;\n    var ptr6 = passArray8ToWasm0(token_address, wasm.__wbindgen_malloc);\n    var len6 = WASM_VECTOR_LEN;\n    var ptr7 = passArray8ToWasm0(token_id, wasm.__wbindgen_malloc);\n    var len7 = WASM_VECTOR_LEN;\n    var ptr8 = passArray8ToWasm0(target_address, wasm.__wbindgen_malloc);\n    var len8 = WASM_VECTOR_LEN;\n    var ret = wasm.transfer_wrapped_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, ptr5, len5, token_chain, ptr6, len6, ptr7, len7, nonce, ptr8, len8, target_chain);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} to_authority\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function complete_transfer_native_ix(program_id, bridge_id, payer, to_authority, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(to_authority, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ret = wasm.complete_transfer_native_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} to_authority\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function complete_transfer_wrapped_ix(program_id, bridge_id, payer, to_authority, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(to_authority, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ret = wasm.complete_transfer_wrapped_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function complete_transfer_wrapped_meta_ix(program_id, bridge_id, payer, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ret = wasm.complete_transfer_wrapped_meta_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {string} spill\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function upgrade_contract_ix(program_id, bridge_id, payer, spill, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(spill, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ret = wasm.upgrade_contract_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} bridge_id\n* @param {string} payer\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function register_chain_ix(program_id, bridge_id, payer, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(bridge_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ret = wasm.register_chain_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return takeObject(ret);\n}\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {string} program_id\n* @returns {Uint8Array}\n*/\nexport function emitter_address(program_id) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.emitter_address(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {string} program_id\n* @returns {Uint8Array}\n*/\nexport function approval_authority_address(program_id) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.approval_authority_address(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {string} program_id\n* @param {Uint8Array} token_address\n* @param {number} token_chain\n* @param {Uint8Array} token_id\n* @returns {Uint8Array}\n*/\nexport function wrapped_address(program_id, token_address, token_chain, token_id) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passArray8ToWasm0(token_address, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ptr2 = passArray8ToWasm0(token_id, wasm.__wbindgen_malloc);\n        var len2 = WASM_VECTOR_LEN;\n        wasm.wrapped_address(retptr, ptr0, len0, ptr1, len1, token_chain, ptr2, len2);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v3 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v3;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {string} program_id\n* @param {Uint8Array} mint_address\n* @returns {Uint8Array}\n*/\nexport function wrapped_meta_address(program_id, mint_address) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passArray8ToWasm0(mint_address, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.wrapped_meta_address(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {Uint8Array} mint_address\n* @returns {Uint8Array}\n*/\nexport function spl_meta_address(mint_address) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passArray8ToWasm0(mint_address, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.spl_meta_address(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nexport function parse_wrapped_meta(data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_wrapped_meta(ptr0, len0);\n    return takeObject(ret);\n}\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nexport function parse_endpoint_registration(data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_endpoint_registration(ptr0, len0);\n    return takeObject(ret);\n}\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(\"expected instance of \" + klass.name);\n    }\n    return instance.ptr;\n}\nvar u32CvtShim = new Uint32Array(2);\nvar uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\nvar cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\nfunction passArrayJsValueToWasm0(array, malloc) {\n    var ptr = malloc(array.length * 4);\n    var mem = getUint32Memory0();\n    for (var i = 0; i < array.length; i++) {\n        mem[ptr / 4 + i] = addHeapObject(array[i]);\n    }\n    WASM_VECTOR_LEN = array.length;\n    return ptr;\n}\n/**\n* Initialize Javascript logging and panic handler\n*/\nexport function init() {\n    wasm.init();\n}\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    }\n    catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n/**\n*/\nvar Hash = /** @class */ (function () {\n    /**\n    * Create a new Hash object\n    *\n    * * `value` - optional hash as a base58 encoded string, `Uint8Array`, `[number]`\n    * @param {any} value\n    */\n    function Hash(value) {\n        var ret = wasm.hash_constructor(addHeapObject(value));\n        return Hash.__wrap(ret);\n    }\n    Hash.__wrap = function (ptr) {\n        var obj = Object.create(Hash.prototype);\n        obj.ptr = ptr;\n        return obj;\n    };\n    Hash.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    Hash.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n        wasm.__wbg_hash_free(ptr);\n    };\n    /**\n    * Return the base58 string representation of the hash\n    * @returns {string}\n    */\n    Hash.prototype.toString = function () {\n        try {\n            var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.hash_toString(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        }\n        finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    };\n    /**\n    * Checks if two `Hash`s are equal\n    * @param {Hash} other\n    * @returns {boolean}\n    */\n    Hash.prototype.equals = function (other) {\n        _assertClass(other, Hash);\n        var ret = wasm.hash_equals(this.ptr, other.ptr);\n        return ret !== 0;\n    };\n    /**\n    * Return the `Uint8Array` representation of the hash\n    * @returns {Uint8Array}\n    */\n    Hash.prototype.toBytes = function () {\n        try {\n            var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.hash_toBytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        }\n        finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    };\n    return Hash;\n}());\nexport { Hash };\n/**\n* A directive for a single invocation of a Solana program.\n*\n* An instruction specifies which program it is calling, which accounts it may\n* read or modify, and additional data that serves as input to the program. One\n* or more instructions are included in transactions submitted by Solana\n* clients. Instructions are also used to describe [cross-program\n* invocations][cpi].\n*\n* [cpi]: https://docs.solana.com/developing/programming-model/calling-between-programs\n*\n* During execution, a program will receive a list of account data as one of\n* its arguments, in the same order as specified during `Instruction`\n* construction.\n*\n* While Solana is agnostic to the format of the instruction data, it has\n* built-in support for serialization via [`borsh`] and [`bincode`].\n*\n* [`borsh`]: https://docs.rs/borsh/latest/borsh/\n* [`bincode`]: https://docs.rs/bincode/latest/bincode/\n*\n* # Specifying account metadata\n*\n* When constructing an [`Instruction`], a list of all accounts that may be\n* read or written during the execution of that instruction must be supplied as\n* [`AccountMeta`] values.\n*\n* Any account whose data may be mutated by the program during execution must\n* be specified as writable. During execution, writing to an account that was\n* not specified as writable will cause the transaction to fail. Writing to an\n* account that is not owned by the program will cause the transaction to fail.\n*\n* Any account whose lamport balance may be mutated by the program during\n* execution must be specified as writable. During execution, mutating the\n* lamports of an account that was not specified as writable will cause the\n* transaction to fail. While _subtracting_ lamports from an account not owned\n* by the program will cause the transaction to fail, _adding_ lamports to any\n* account is allowed, as long is it is mutable.\n*\n* Accounts that are not read or written by the program may still be specified\n* in an `Instruction`'s account list. These will affect scheduling of program\n* execution by the runtime, but will otherwise be ignored.\n*\n* When building a transaction, the Solana runtime coalesces all accounts used\n* by all instructions in that transaction, along with accounts and permissions\n* required by the runtime, into a single account list. Some accounts and\n* account permissions required by the runtime to process a transaction are\n* _not_ required to be included in an `Instruction`s account list. These\n* include:\n*\n* - The program ID &mdash; it is a separate field of `Instruction`\n* - The transaction's fee-paying account &mdash; it is added during [`Message`]\n*   construction. A program may still require the fee payer as part of the\n*   account list if it directly references it.\n*\n* [`Message`]: crate::message::Message\n*\n* Programs may require signatures from some accounts, in which case they\n* should be specified as signers during `Instruction` construction. The\n* program must still validate during execution that the account is a signer.\n*/\nvar Instruction = /** @class */ (function () {\n    function Instruction() {\n    }\n    Instruction.__wrap = function (ptr) {\n        var obj = Object.create(Instruction.prototype);\n        obj.ptr = ptr;\n        return obj;\n    };\n    Instruction.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    Instruction.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n        wasm.__wbg_instruction_free(ptr);\n    };\n    return Instruction;\n}());\nexport { Instruction };\n/**\n*/\nvar Instructions = /** @class */ (function () {\n    /**\n    */\n    function Instructions() {\n        var ret = wasm.instructions_constructor();\n        return Instructions.__wrap(ret);\n    }\n    Instructions.__wrap = function (ptr) {\n        var obj = Object.create(Instructions.prototype);\n        obj.ptr = ptr;\n        return obj;\n    };\n    Instructions.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    Instructions.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n        wasm.__wbg_instructions_free(ptr);\n    };\n    /**\n    * @param {Instruction} instruction\n    */\n    Instructions.prototype.push = function (instruction) {\n        _assertClass(instruction, Instruction);\n        var ptr0 = instruction.ptr;\n        instruction.ptr = 0;\n        wasm.instructions_push(this.ptr, ptr0);\n    };\n    return Instructions;\n}());\nexport { Instructions };\n/**\n*/\nvar Message = /** @class */ (function () {\n    function Message() {\n    }\n    Message.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    Message.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n        wasm.__wbg_message_free(ptr);\n    };\n    Object.defineProperty(Message.prototype, \"recent_blockhash\", {\n        /**\n        * The id of a recent ledger entry.\n        */\n        get: function () {\n            var ret = wasm.__wbg_get_message_recent_blockhash(this.ptr);\n            return Hash.__wrap(ret);\n        },\n        /**\n        * The id of a recent ledger entry.\n        * @param {Hash} arg0\n        */\n        set: function (arg0) {\n            _assertClass(arg0, Hash);\n            var ptr0 = arg0.ptr;\n            arg0.ptr = 0;\n            wasm.__wbg_set_message_recent_blockhash(this.ptr, ptr0);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Message;\n}());\nexport { Message };\n/**\n*/\nvar Pubkey = /** @class */ (function () {\n    /**\n    * Create a new Pubkey object\n    *\n    * * `value` - optional public key as a base58 encoded string, `Uint8Array`, `[number]`\n    * @param {any} value\n    */\n    function Pubkey(value) {\n        var ret = wasm.pubkey_constructor(addHeapObject(value));\n        return Pubkey.__wrap(ret);\n    }\n    Pubkey.__wrap = function (ptr) {\n        var obj = Object.create(Pubkey.prototype);\n        obj.ptr = ptr;\n        return obj;\n    };\n    Pubkey.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    Pubkey.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n        wasm.__wbg_pubkey_free(ptr);\n    };\n    /**\n    * Return the base58 string representation of the public key\n    * @returns {string}\n    */\n    Pubkey.prototype.toString = function () {\n        try {\n            var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.pubkey_toString(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        }\n        finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    };\n    /**\n    * Check if a `Pubkey` is on the ed25519 curve.\n    * @returns {boolean}\n    */\n    Pubkey.prototype.isOnCurve = function () {\n        var ret = wasm.pubkey_isOnCurve(this.ptr);\n        return ret !== 0;\n    };\n    /**\n    * Checks if two `Pubkey`s are equal\n    * @param {Pubkey} other\n    * @returns {boolean}\n    */\n    Pubkey.prototype.equals = function (other) {\n        _assertClass(other, Pubkey);\n        var ret = wasm.pubkey_equals(this.ptr, other.ptr);\n        return ret !== 0;\n    };\n    /**\n    * Return the `Uint8Array` representation of the public key\n    * @returns {Uint8Array}\n    */\n    Pubkey.prototype.toBytes = function () {\n        try {\n            var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.pubkey_toBytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        }\n        finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    };\n    /**\n    * Derive a Pubkey from another Pubkey, string seed, and a program id\n    * @param {Pubkey} base\n    * @param {string} seed\n    * @param {Pubkey} owner\n    * @returns {Pubkey}\n    */\n    Pubkey.createWithSeed = function (base, seed, owner) {\n        _assertClass(base, Pubkey);\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        _assertClass(owner, Pubkey);\n        var ret = wasm.pubkey_createWithSeed(base.ptr, ptr0, len0, owner.ptr);\n        return Pubkey.__wrap(ret);\n    };\n    /**\n    * Derive a program address from seeds and a program id\n    * @param {any[]} seeds\n    * @param {Pubkey} program_id\n    * @returns {Pubkey}\n    */\n    Pubkey.createProgramAddress = function (seeds, program_id) {\n        var ptr0 = passArrayJsValueToWasm0(seeds, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        _assertClass(program_id, Pubkey);\n        var ret = wasm.pubkey_createProgramAddress(ptr0, len0, program_id.ptr);\n        return Pubkey.__wrap(ret);\n    };\n    /**\n    * Find a valid program address\n    *\n    * Returns:\n    * * `[PubKey, number]` - the program address and bump seed\n    * @param {any[]} seeds\n    * @param {Pubkey} program_id\n    * @returns {any}\n    */\n    Pubkey.findProgramAddress = function (seeds, program_id) {\n        var ptr0 = passArrayJsValueToWasm0(seeds, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        _assertClass(program_id, Pubkey);\n        var ret = wasm.pubkey_findProgramAddress(ptr0, len0, program_id.ptr);\n        return takeObject(ret);\n    };\n    return Pubkey;\n}());\nexport { Pubkey };\nvar SystemInstruction = /** @class */ (function () {\n    function SystemInstruction() {\n    }\n    SystemInstruction.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    SystemInstruction.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n    };\n    /**\n    * @param {Pubkey} from_pubkey\n    * @param {Pubkey} to_pubkey\n    * @param {BigInt} lamports\n    * @param {BigInt} space\n    * @param {Pubkey} owner\n    * @returns {Instruction}\n    */\n    SystemInstruction.createAccount = function (from_pubkey, to_pubkey, lamports, space, owner) {\n        _assertClass(from_pubkey, Pubkey);\n        _assertClass(to_pubkey, Pubkey);\n        uint64CvtShim[0] = lamports;\n        var low0 = u32CvtShim[0];\n        var high0 = u32CvtShim[1];\n        uint64CvtShim[0] = space;\n        var low1 = u32CvtShim[0];\n        var high1 = u32CvtShim[1];\n        _assertClass(owner, Pubkey);\n        var ret = wasm.systeminstruction_createAccount(from_pubkey.ptr, to_pubkey.ptr, low0, high0, low1, high1, owner.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} from_pubkey\n    * @param {Pubkey} to_pubkey\n    * @param {Pubkey} base\n    * @param {string} seed\n    * @param {BigInt} lamports\n    * @param {BigInt} space\n    * @param {Pubkey} owner\n    * @returns {Instruction}\n    */\n    SystemInstruction.createAccountWithSeed = function (from_pubkey, to_pubkey, base, seed, lamports, space, owner) {\n        _assertClass(from_pubkey, Pubkey);\n        _assertClass(to_pubkey, Pubkey);\n        _assertClass(base, Pubkey);\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = lamports;\n        var low1 = u32CvtShim[0];\n        var high1 = u32CvtShim[1];\n        uint64CvtShim[0] = space;\n        var low2 = u32CvtShim[0];\n        var high2 = u32CvtShim[1];\n        _assertClass(owner, Pubkey);\n        var ret = wasm.systeminstruction_createAccountWithSeed(from_pubkey.ptr, to_pubkey.ptr, base.ptr, ptr0, len0, low1, high1, low2, high2, owner.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} pubkey\n    * @param {Pubkey} owner\n    * @returns {Instruction}\n    */\n    SystemInstruction.assign = function (pubkey, owner) {\n        _assertClass(pubkey, Pubkey);\n        _assertClass(owner, Pubkey);\n        var ret = wasm.systeminstruction_assign(pubkey.ptr, owner.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} pubkey\n    * @param {Pubkey} base\n    * @param {string} seed\n    * @param {Pubkey} owner\n    * @returns {Instruction}\n    */\n    SystemInstruction.assignWithSeed = function (pubkey, base, seed, owner) {\n        _assertClass(pubkey, Pubkey);\n        _assertClass(base, Pubkey);\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        _assertClass(owner, Pubkey);\n        var ret = wasm.systeminstruction_assignWithSeed(pubkey.ptr, base.ptr, ptr0, len0, owner.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} from_pubkey\n    * @param {Pubkey} to_pubkey\n    * @param {BigInt} lamports\n    * @returns {Instruction}\n    */\n    SystemInstruction.transfer = function (from_pubkey, to_pubkey, lamports) {\n        _assertClass(from_pubkey, Pubkey);\n        _assertClass(to_pubkey, Pubkey);\n        uint64CvtShim[0] = lamports;\n        var low0 = u32CvtShim[0];\n        var high0 = u32CvtShim[1];\n        var ret = wasm.systeminstruction_transfer(from_pubkey.ptr, to_pubkey.ptr, low0, high0);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} from_pubkey\n    * @param {Pubkey} from_base\n    * @param {string} from_seed\n    * @param {Pubkey} from_owner\n    * @param {Pubkey} to_pubkey\n    * @param {BigInt} lamports\n    * @returns {Instruction}\n    */\n    SystemInstruction.transferWithSeed = function (from_pubkey, from_base, from_seed, from_owner, to_pubkey, lamports) {\n        _assertClass(from_pubkey, Pubkey);\n        _assertClass(from_base, Pubkey);\n        var ptr0 = passStringToWasm0(from_seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        _assertClass(from_owner, Pubkey);\n        _assertClass(to_pubkey, Pubkey);\n        uint64CvtShim[0] = lamports;\n        var low1 = u32CvtShim[0];\n        var high1 = u32CvtShim[1];\n        var ret = wasm.systeminstruction_transferWithSeed(from_pubkey.ptr, from_base.ptr, ptr0, len0, from_owner.ptr, to_pubkey.ptr, low1, high1);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} pubkey\n    * @param {BigInt} space\n    * @returns {Instruction}\n    */\n    SystemInstruction.allocate = function (pubkey, space) {\n        _assertClass(pubkey, Pubkey);\n        uint64CvtShim[0] = space;\n        var low0 = u32CvtShim[0];\n        var high0 = u32CvtShim[1];\n        var ret = wasm.systeminstruction_allocate(pubkey.ptr, low0, high0);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} address\n    * @param {Pubkey} base\n    * @param {string} seed\n    * @param {BigInt} space\n    * @param {Pubkey} owner\n    * @returns {Instruction}\n    */\n    SystemInstruction.allocateWithSeed = function (address, base, seed, space, owner) {\n        _assertClass(address, Pubkey);\n        _assertClass(base, Pubkey);\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = space;\n        var low1 = u32CvtShim[0];\n        var high1 = u32CvtShim[1];\n        _assertClass(owner, Pubkey);\n        var ret = wasm.systeminstruction_allocateWithSeed(address.ptr, base.ptr, ptr0, len0, low1, high1, owner.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} from_pubkey\n    * @param {Pubkey} nonce_pubkey\n    * @param {Pubkey} authority\n    * @param {BigInt} lamports\n    * @returns {Array<any>}\n    */\n    SystemInstruction.createNonceAccount = function (from_pubkey, nonce_pubkey, authority, lamports) {\n        _assertClass(from_pubkey, Pubkey);\n        _assertClass(nonce_pubkey, Pubkey);\n        _assertClass(authority, Pubkey);\n        uint64CvtShim[0] = lamports;\n        var low0 = u32CvtShim[0];\n        var high0 = u32CvtShim[1];\n        var ret = wasm.systeminstruction_createNonceAccount(from_pubkey.ptr, nonce_pubkey.ptr, authority.ptr, low0, high0);\n        return takeObject(ret);\n    };\n    /**\n    * @param {Pubkey} nonce_pubkey\n    * @param {Pubkey} authorized_pubkey\n    * @returns {Instruction}\n    */\n    SystemInstruction.advanceNonceAccount = function (nonce_pubkey, authorized_pubkey) {\n        _assertClass(nonce_pubkey, Pubkey);\n        _assertClass(authorized_pubkey, Pubkey);\n        var ret = wasm.systeminstruction_advanceNonceAccount(nonce_pubkey.ptr, authorized_pubkey.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} nonce_pubkey\n    * @param {Pubkey} authorized_pubkey\n    * @param {Pubkey} to_pubkey\n    * @param {BigInt} lamports\n    * @returns {Instruction}\n    */\n    SystemInstruction.withdrawNonceAccount = function (nonce_pubkey, authorized_pubkey, to_pubkey, lamports) {\n        _assertClass(nonce_pubkey, Pubkey);\n        _assertClass(authorized_pubkey, Pubkey);\n        _assertClass(to_pubkey, Pubkey);\n        uint64CvtShim[0] = lamports;\n        var low0 = u32CvtShim[0];\n        var high0 = u32CvtShim[1];\n        var ret = wasm.systeminstruction_withdrawNonceAccount(nonce_pubkey.ptr, authorized_pubkey.ptr, to_pubkey.ptr, low0, high0);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} nonce_pubkey\n    * @param {Pubkey} authorized_pubkey\n    * @param {Pubkey} new_authority\n    * @returns {Instruction}\n    */\n    SystemInstruction.authorizeNonceAccount = function (nonce_pubkey, authorized_pubkey, new_authority) {\n        _assertClass(nonce_pubkey, Pubkey);\n        _assertClass(authorized_pubkey, Pubkey);\n        _assertClass(new_authority, Pubkey);\n        var ret = wasm.systeminstruction_authorizeNonceAccount(nonce_pubkey.ptr, authorized_pubkey.ptr, new_authority.ptr);\n        return Instruction.__wrap(ret);\n    };\n    return SystemInstruction;\n}());\nexport { SystemInstruction };\nexport function __wbindgen_json_parse(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_instruction_new(arg0) {\n    var ret = Instruction.__wrap(arg0);\n    return addHeapObject(ret);\n}\n;\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n}\n;\nexport function __wbg_pubkey_new(arg0) {\n    var ret = Pubkey.__wrap(arg0);\n    return addHeapObject(ret);\n}\n;\nexport function __wbindgen_string_get(arg0, arg1) {\n    var obj = getObject(arg1);\n    var ret = typeof (obj) === 'string' ? obj : undefined;\n    var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}\n;\nexport function __wbindgen_is_undefined(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n}\n;\nexport function __wbindgen_string_new(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n}\n;\nexport function __wbindgen_number_get(arg0, arg1) {\n    var obj = getObject(arg1);\n    var ret = typeof (obj) === 'number' ? obj : undefined;\n    getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n    getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n}\n;\nexport function __wbindgen_number_new(arg0) {\n    var ret = arg0;\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_debug_104e10fa490af5d4(arg0) {\n    console.debug(getObject(arg0));\n}\n;\nexport function __wbg_error_009e67eab9c16665(arg0) {\n    console.error(getObject(arg0));\n}\n;\nexport function __wbg_info_44b510682aa2cf74(arg0) {\n    console.info(getObject(arg0));\n}\n;\nexport function __wbg_log_4989d5b00a0cc297(arg0) {\n    console.log(getObject(arg0));\n}\n;\nexport function __wbg_warn_f9b80af3c73d7193(arg0) {\n    console.warn(getObject(arg0));\n}\n;\nexport function __wbg_new_693216e109162396() {\n    var ret = new Error();\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_stack_0ddaca5d1abfb52f(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}\n;\nexport function __wbg_error_09919627ac0992f5(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    }\n    finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n}\n;\nexport function __wbg_new_949bbc1147195c4e() {\n    var ret = new Array();\n    return addHeapObject(ret);\n}\n;\nexport function __wbindgen_is_function(arg0) {\n    var ret = typeof (getObject(arg0)) === 'function';\n    return ret;\n}\n;\nexport function __wbindgen_is_object(arg0) {\n    var val = getObject(arg0);\n    var ret = typeof (val) === 'object' && val !== null;\n    return ret;\n}\n;\nexport function __wbg_next_c4151d46d5fa7097(arg0) {\n    var ret = getObject(arg0).next;\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_next_7720502039b96d00() {\n    return handleError(function (arg0) {\n        var ret = getObject(arg0).next();\n        return addHeapObject(ret);\n    }, arguments);\n}\n;\nexport function __wbg_done_b06cf0578e89ff68(arg0) {\n    var ret = getObject(arg0).done;\n    return ret;\n}\n;\nexport function __wbg_value_e74a542443d92451(arg0) {\n    var ret = getObject(arg0).value;\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_iterator_4fc4ce93e6b92958() {\n    var ret = Symbol.iterator;\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_get_4d0f21c2f823742e() {\n    return handleError(function (arg0, arg1) {\n        var ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments);\n}\n;\nexport function __wbg_call_888d259a5fefc347() {\n    return handleError(function (arg0, arg1) {\n        var ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments);\n}\n;\nexport function __wbg_newwithlength_75ee2b96c288e6bc(arg0) {\n    var ret = new Array(arg0 >>> 0);\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_set_1820441f7fb79aad(arg0, arg1, arg2) {\n    getObject(arg0)[arg1 >>> 0] = takeObject(arg2);\n}\n;\nexport function __wbg_isArray_eb7ad55f2da67dde(arg0) {\n    var ret = Array.isArray(getObject(arg0));\n    return ret;\n}\n;\nexport function __wbg_push_284486ca27c6aa8b(arg0, arg1) {\n    var ret = getObject(arg0).push(getObject(arg1));\n    return ret;\n}\n;\nexport function __wbg_values_364ae56c608e6824(arg0) {\n    var ret = getObject(arg0).values();\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_buffer_397eaa4d72ee94dd(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_new_a7ce447f15ff496f(arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_set_969ad0a60e51d320(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n}\n;\nexport function __wbg_length_1eb8fc608a0d4cdb(arg0) {\n    var ret = getObject(arg0).length;\n    return ret;\n}\n;\nexport function __wbg_instanceof_Uint8Array_08a1f3a179095e76(arg0) {\n    var ret = getObject(arg0) instanceof Uint8Array;\n    return ret;\n}\n;\nexport function __wbindgen_debug_string(arg0, arg1) {\n    var ret = debugString(getObject(arg1));\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}\n;\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n}\n;\nexport function __wbindgen_rethrow(arg0) {\n    throw takeObject(arg0);\n}\n;\nexport function __wbindgen_memory() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n}\n;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}