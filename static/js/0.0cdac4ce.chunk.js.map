{"version":3,"sources":["../node_modules/@certusone/wormhole-sdk/lib/esm/solana/core/bridge_bg.js","../node_modules/webpack/buildin/harmony-module.js","../node_modules/@certusone/wormhole-sdk/lib/esm/solana/core/bridge.js"],"names":["heap","Array","fill","undefined","getObject","idx","push","WASM_VECTOR_LEN","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","cachedTextEncoder","TextEncoder","module","require","encodeString","encodeInto","arg","view","buf","encode","set","read","length","written","passStringToWasm0","malloc","realloc","ptr_1","subarray","len","ptr","mem","offset","code","charCodeAt","slice","cachegetInt32Memory0","getInt32Memory0","Int32Array","heap_next","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","getStringFromWasm0","decode","addHeapObject","obj","isLikeNone","x","cachegetFloat64Memory0","debugString","val","type","description","name_1","name","isArray","length_1","debug","i","className","builtInMatches","exec","toString","call","JSON","stringify","_","Error","message","stack","passArray8ToWasm0","post_message_ix","program_id","payer","emitter","nonce","msg","consistency","ptr0","len0","ptr1","len1","ptr2","len2","ptr3","len3","ptr4","len4","ptr5","len5","post_vaa_ix","signature_set","vaa","update_guardian_set_ix","set_fees_ix","transfer_fees_ix","upgrade_contract_ix","spill","verify_signatures_ix","guardian_set_index","guardian_set","vaa_data","getArrayU8FromWasm0","guardian_set_address","bridge","index","retptr","r0","r1","v1","parse_guardian_set","data","state_address","parse_state","fee_collector_address","claim_address","v2","parse_posted_message","parse_vaa","_assertClass","instance","klass","u32CvtShim","Uint32Array","uint64CvtShim","BigUint64Array","cachegetUint32Memory0","passArrayJsValueToWasm0","array","init","handleError","f","args","apply","this","e","Hash","value","__wrap","Object","create","prototype","__destroy_into_raw","free","equals","other","toBytes","v0","Instruction","Instructions","instruction","Message","defineProperty","get","arg0","enumerable","configurable","Pubkey","isOnCurve","createWithSeed","base","seed","owner","createProgramAddress","seeds","findProgramAddress","SystemInstruction","createAccount","from_pubkey","to_pubkey","lamports","space","low0","high0","low1","high1","createAccountWithSeed","low2","high2","assign","pubkey","assignWithSeed","transfer","transferWithSeed","from_base","from_seed","from_owner","allocate","allocateWithSeed","address","createNonceAccount","nonce_pubkey","authority","advanceNonceAccount","authorized_pubkey","withdrawNonceAccount","authorizeNonceAccount","new_authority","__wbindgen_json_serialize","arg1","__wbindgen_object_drop_ref","__wbindgen_json_parse","parse","__wbg_instruction_new","__wbg_pubkey_new","__wbindgen_string_get","__wbindgen_is_undefined","__wbindgen_string_new","__wbindgen_number_get","Float64Array","__wbindgen_number_new","__wbg_debug_104e10fa490af5d4","console","__wbg_error_009e67eab9c16665","error","__wbg_info_44b510682aa2cf74","info","__wbg_log_4989d5b00a0cc297","log","__wbg_warn_f9b80af3c73d7193","warn","__wbg_new_693216e109162396","__wbg_stack_0ddaca5d1abfb52f","__wbg_error_09919627ac0992f5","__wbg_new_949bbc1147195c4e","__wbindgen_is_function","__wbindgen_is_object","__wbg_next_c4151d46d5fa7097","next","__wbg_next_7720502039b96d00","arguments","__wbg_done_b06cf0578e89ff68","done","__wbg_value_e74a542443d92451","__wbg_iterator_4fc4ce93e6b92958","Symbol","iterator","__wbg_get_4d0f21c2f823742e","Reflect","__wbg_call_888d259a5fefc347","__wbg_newwithlength_75ee2b96c288e6bc","__wbg_set_1820441f7fb79aad","arg2","__wbg_isArray_eb7ad55f2da67dde","__wbg_push_284486ca27c6aa8b","__wbg_values_364ae56c608e6824","values","__wbg_buffer_397eaa4d72ee94dd","__wbg_new_a7ce447f15ff496f","__wbg_set_969ad0a60e51d320","__wbg_length_1eb8fc608a0d4cdb","__wbg_instanceof_Uint8Array_08a1f3a179095e76","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_rethrow","__wbindgen_memory","exports","originalModule","webpackPolyfill","children","l"],"mappings":"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","file":"static/js/0.0cdac4ce.chunk.js","sourcesContent":["import * as wasm from './bridge_bg.wasm';\nvar heap = new Array(32).fill(undefined);\nheap.push(undefined, null, true, false);\nfunction getObject(idx) { return heap[idx]; }\nvar WASM_VECTOR_LEN = 0;\nvar cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\nvar lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\nvar cachedTextEncoder = new lTextEncoder('utf-8');\nvar encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n        return cachedTextEncoder.encodeInto(arg, view);\n    }\n    : function (arg, view) {\n        var buf = cachedTextEncoder.encode(arg);\n        view.set(buf);\n        return {\n            read: arg.length,\n            written: buf.length\n        };\n    });\nfunction passStringToWasm0(arg, malloc, realloc) {\n    if (realloc === undefined) {\n        var buf = cachedTextEncoder.encode(arg);\n        var ptr_1 = malloc(buf.length);\n        getUint8Memory0().subarray(ptr_1, ptr_1 + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr_1;\n    }\n    var len = arg.length;\n    var ptr = malloc(len);\n    var mem = getUint8Memory0();\n    var offset = 0;\n    for (; offset < len; offset++) {\n        var code = arg.charCodeAt(offset);\n        if (code > 0x7F)\n            break;\n        mem[ptr + offset] = code;\n    }\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        var view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        var ret = encodeString(arg, view);\n        offset += ret.written;\n    }\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\nvar cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\nvar heap_next = heap.length;\nfunction dropObject(idx) {\n    if (idx < 36)\n        return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\nfunction takeObject(idx) {\n    var ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\nvar lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\nvar cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\ncachedTextDecoder.decode();\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length)\n        heap.push(heap.length + 1);\n    var idx = heap_next;\n    heap_next = heap[idx];\n    heap[idx] = obj;\n    return idx;\n}\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\nvar cachegetFloat64Memory0 = null;\nfunction getFloat64Memory0() {\n    if (cachegetFloat64Memory0 === null || cachegetFloat64Memory0.buffer !== wasm.memory.buffer) {\n        cachegetFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachegetFloat64Memory0;\n}\nfunction debugString(val) {\n    // primitive types\n    var type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return \"\" + val;\n    }\n    if (type == 'string') {\n        return \"\\\"\" + val + \"\\\"\";\n    }\n    if (type == 'symbol') {\n        var description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        }\n        else {\n            return \"Symbol(\" + description + \")\";\n        }\n    }\n    if (type == 'function') {\n        var name_1 = val.name;\n        if (typeof name_1 == 'string' && name_1.length > 0) {\n            return \"Function(\" + name_1 + \")\";\n        }\n        else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        var length_1 = val.length;\n        var debug = '[';\n        if (length_1 > 0) {\n            debug += debugString(val[0]);\n        }\n        for (var i = 1; i < length_1; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    var builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    var className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    }\n    else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        }\n        catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return val.name + \": \" + val.message + \"\\n\" + val.stack;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\nfunction passArray8ToWasm0(arg, malloc) {\n    var ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {string} program_id\n* @param {string} payer\n* @param {string} emitter\n* @param {string} message\n* @param {number} nonce\n* @param {Uint8Array} msg\n* @param {string} consistency\n* @returns {any}\n*/\nexport function post_message_ix(program_id, payer, emitter, message, nonce, msg, consistency) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(emitter, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passStringToWasm0(message, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = passArray8ToWasm0(msg, wasm.__wbindgen_malloc);\n    var len4 = WASM_VECTOR_LEN;\n    var ptr5 = passStringToWasm0(consistency, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len5 = WASM_VECTOR_LEN;\n    var ret = wasm.post_message_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, nonce, ptr4, len4, ptr5, len5);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} payer\n* @param {string} signature_set\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function post_vaa_ix(program_id, payer, signature_set, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(signature_set, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ret = wasm.post_vaa_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} payer\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function update_guardian_set_ix(program_id, payer, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ret = wasm.update_guardian_set_ix(ptr0, len0, ptr1, len1, ptr2, len2);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} payer\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function set_fees_ix(program_id, payer, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ret = wasm.set_fees_ix(ptr0, len0, ptr1, len1, ptr2, len2);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} payer\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function transfer_fees_ix(program_id, payer, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ret = wasm.transfer_fees_ix(ptr0, len0, ptr1, len1, ptr2, len2);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} payer\n* @param {string} spill\n* @param {Uint8Array} vaa\n* @returns {any}\n*/\nexport function upgrade_contract_ix(program_id, payer, spill, vaa) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(spill, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ret = wasm.upgrade_contract_ix(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return takeObject(ret);\n}\n/**\n* @param {string} program_id\n* @param {string} payer\n* @param {number} guardian_set_index\n* @param {any} guardian_set\n* @param {string} signature_set\n* @param {Uint8Array} vaa_data\n* @returns {any}\n*/\nexport function verify_signatures_ix(program_id, payer, guardian_set_index, guardian_set, signature_set, vaa_data) {\n    var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(payer, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passStringToWasm0(signature_set, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = passArray8ToWasm0(vaa_data, wasm.__wbindgen_malloc);\n    var len3 = WASM_VECTOR_LEN;\n    var ret = wasm.verify_signatures_ix(ptr0, len0, ptr1, len1, guardian_set_index, addHeapObject(guardian_set), ptr2, len2, ptr3, len3);\n    return takeObject(ret);\n}\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {string} bridge\n* @param {number} index\n* @returns {Uint8Array}\n*/\nexport function guardian_set_address(bridge, index) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(bridge, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.guardian_set_address(retptr, ptr0, len0, index);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nexport function parse_guardian_set(data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_guardian_set(ptr0, len0);\n    return takeObject(ret);\n}\n/**\n* @param {string} bridge\n* @returns {Uint8Array}\n*/\nexport function state_address(bridge) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(bridge, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.state_address(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nexport function parse_state(data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_state(ptr0, len0);\n    return takeObject(ret);\n}\n/**\n* @param {string} bridge\n* @returns {Uint8Array}\n*/\nexport function fee_collector_address(bridge) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(bridge, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        wasm.fee_collector_address(retptr, ptr0, len0);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v1 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v1;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {string} program_id\n* @param {Uint8Array} vaa\n* @returns {Uint8Array}\n*/\nexport function claim_address(program_id, vaa) {\n    try {\n        var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        var ptr0 = passStringToWasm0(program_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passArray8ToWasm0(vaa, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        wasm.claim_address(retptr, ptr0, len0, ptr1, len1);\n        var r0 = getInt32Memory0()[retptr / 4 + 0];\n        var r1 = getInt32Memory0()[retptr / 4 + 1];\n        var v2 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1);\n        return v2;\n    }\n    finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n}\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nexport function parse_posted_message(data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_posted_message(ptr0, len0);\n    return takeObject(ret);\n}\n/**\n* @param {Uint8Array} data\n* @returns {any}\n*/\nexport function parse_vaa(data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.parse_vaa(ptr0, len0);\n    return takeObject(ret);\n}\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(\"expected instance of \" + klass.name);\n    }\n    return instance.ptr;\n}\nvar u32CvtShim = new Uint32Array(2);\nvar uint64CvtShim = new BigUint64Array(u32CvtShim.buffer);\nvar cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\nfunction passArrayJsValueToWasm0(array, malloc) {\n    var ptr = malloc(array.length * 4);\n    var mem = getUint32Memory0();\n    for (var i = 0; i < array.length; i++) {\n        mem[ptr / 4 + i] = addHeapObject(array[i]);\n    }\n    WASM_VECTOR_LEN = array.length;\n    return ptr;\n}\n/**\n* Initialize Javascript logging and panic handler\n*/\nexport function init() {\n    wasm.init();\n}\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    }\n    catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n/**\n*/\nvar Hash = /** @class */ (function () {\n    /**\n    * Create a new Hash object\n    *\n    * * `value` - optional hash as a base58 encoded string, `Uint8Array`, `[number]`\n    * @param {any} value\n    */\n    function Hash(value) {\n        var ret = wasm.hash_constructor(addHeapObject(value));\n        return Hash.__wrap(ret);\n    }\n    Hash.__wrap = function (ptr) {\n        var obj = Object.create(Hash.prototype);\n        obj.ptr = ptr;\n        return obj;\n    };\n    Hash.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    Hash.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n        wasm.__wbg_hash_free(ptr);\n    };\n    /**\n    * Return the base58 string representation of the hash\n    * @returns {string}\n    */\n    Hash.prototype.toString = function () {\n        try {\n            var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.hash_toString(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        }\n        finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    };\n    /**\n    * Checks if two `Hash`s are equal\n    * @param {Hash} other\n    * @returns {boolean}\n    */\n    Hash.prototype.equals = function (other) {\n        _assertClass(other, Hash);\n        var ret = wasm.hash_equals(this.ptr, other.ptr);\n        return ret !== 0;\n    };\n    /**\n    * Return the `Uint8Array` representation of the hash\n    * @returns {Uint8Array}\n    */\n    Hash.prototype.toBytes = function () {\n        try {\n            var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.hash_toBytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        }\n        finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    };\n    return Hash;\n}());\nexport { Hash };\n/**\n* A directive for a single invocation of a Solana program.\n*\n* An instruction specifies which program it is calling, which accounts it may\n* read or modify, and additional data that serves as input to the program. One\n* or more instructions are included in transactions submitted by Solana\n* clients. Instructions are also used to describe [cross-program\n* invocations][cpi].\n*\n* [cpi]: https://docs.solana.com/developing/programming-model/calling-between-programs\n*\n* During execution, a program will receive a list of account data as one of\n* its arguments, in the same order as specified during `Instruction`\n* construction.\n*\n* While Solana is agnostic to the format of the instruction data, it has\n* built-in support for serialization via [`borsh`] and [`bincode`].\n*\n* [`borsh`]: https://docs.rs/borsh/latest/borsh/\n* [`bincode`]: https://docs.rs/bincode/latest/bincode/\n*\n* # Specifying account metadata\n*\n* When constructing an [`Instruction`], a list of all accounts that may be\n* read or written during the execution of that instruction must be supplied as\n* [`AccountMeta`] values.\n*\n* Any account whose data may be mutated by the program during execution must\n* be specified as writable. During execution, writing to an account that was\n* not specified as writable will cause the transaction to fail. Writing to an\n* account that is not owned by the program will cause the transaction to fail.\n*\n* Any account whose lamport balance may be mutated by the program during\n* execution must be specified as writable. During execution, mutating the\n* lamports of an account that was not specified as writable will cause the\n* transaction to fail. While _subtracting_ lamports from an account not owned\n* by the program will cause the transaction to fail, _adding_ lamports to any\n* account is allowed, as long is it is mutable.\n*\n* Accounts that are not read or written by the program may still be specified\n* in an `Instruction`'s account list. These will affect scheduling of program\n* execution by the runtime, but will otherwise be ignored.\n*\n* When building a transaction, the Solana runtime coalesces all accounts used\n* by all instructions in that transaction, along with accounts and permissions\n* required by the runtime, into a single account list. Some accounts and\n* account permissions required by the runtime to process a transaction are\n* _not_ required to be included in an `Instruction`s account list. These\n* include:\n*\n* - The program ID &mdash; it is a separate field of `Instruction`\n* - The transaction's fee-paying account &mdash; it is added during [`Message`]\n*   construction. A program may still require the fee payer as part of the\n*   account list if it directly references it.\n*\n* [`Message`]: crate::message::Message\n*\n* Programs may require signatures from some accounts, in which case they\n* should be specified as signers during `Instruction` construction. The\n* program must still validate during execution that the account is a signer.\n*/\nvar Instruction = /** @class */ (function () {\n    function Instruction() {\n    }\n    Instruction.__wrap = function (ptr) {\n        var obj = Object.create(Instruction.prototype);\n        obj.ptr = ptr;\n        return obj;\n    };\n    Instruction.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    Instruction.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n        wasm.__wbg_instruction_free(ptr);\n    };\n    return Instruction;\n}());\nexport { Instruction };\n/**\n*/\nvar Instructions = /** @class */ (function () {\n    /**\n    */\n    function Instructions() {\n        var ret = wasm.instructions_constructor();\n        return Instructions.__wrap(ret);\n    }\n    Instructions.__wrap = function (ptr) {\n        var obj = Object.create(Instructions.prototype);\n        obj.ptr = ptr;\n        return obj;\n    };\n    Instructions.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    Instructions.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n        wasm.__wbg_instructions_free(ptr);\n    };\n    /**\n    * @param {Instruction} instruction\n    */\n    Instructions.prototype.push = function (instruction) {\n        _assertClass(instruction, Instruction);\n        var ptr0 = instruction.ptr;\n        instruction.ptr = 0;\n        wasm.instructions_push(this.ptr, ptr0);\n    };\n    return Instructions;\n}());\nexport { Instructions };\n/**\n*/\nvar Message = /** @class */ (function () {\n    function Message() {\n    }\n    Message.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    Message.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n        wasm.__wbg_message_free(ptr);\n    };\n    Object.defineProperty(Message.prototype, \"recent_blockhash\", {\n        /**\n        * The id of a recent ledger entry.\n        */\n        get: function () {\n            var ret = wasm.__wbg_get_message_recent_blockhash(this.ptr);\n            return Hash.__wrap(ret);\n        },\n        /**\n        * The id of a recent ledger entry.\n        * @param {Hash} arg0\n        */\n        set: function (arg0) {\n            _assertClass(arg0, Hash);\n            var ptr0 = arg0.ptr;\n            arg0.ptr = 0;\n            wasm.__wbg_set_message_recent_blockhash(this.ptr, ptr0);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Message;\n}());\nexport { Message };\n/**\n*/\nvar Pubkey = /** @class */ (function () {\n    /**\n    * Create a new Pubkey object\n    *\n    * * `value` - optional public key as a base58 encoded string, `Uint8Array`, `[number]`\n    * @param {any} value\n    */\n    function Pubkey(value) {\n        var ret = wasm.pubkey_constructor(addHeapObject(value));\n        return Pubkey.__wrap(ret);\n    }\n    Pubkey.__wrap = function (ptr) {\n        var obj = Object.create(Pubkey.prototype);\n        obj.ptr = ptr;\n        return obj;\n    };\n    Pubkey.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    Pubkey.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n        wasm.__wbg_pubkey_free(ptr);\n    };\n    /**\n    * Return the base58 string representation of the public key\n    * @returns {string}\n    */\n    Pubkey.prototype.toString = function () {\n        try {\n            var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.pubkey_toString(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        }\n        finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    };\n    /**\n    * Check if a `Pubkey` is on the ed25519 curve.\n    * @returns {boolean}\n    */\n    Pubkey.prototype.isOnCurve = function () {\n        var ret = wasm.pubkey_isOnCurve(this.ptr);\n        return ret !== 0;\n    };\n    /**\n    * Checks if two `Pubkey`s are equal\n    * @param {Pubkey} other\n    * @returns {boolean}\n    */\n    Pubkey.prototype.equals = function (other) {\n        _assertClass(other, Pubkey);\n        var ret = wasm.pubkey_equals(this.ptr, other.ptr);\n        return ret !== 0;\n    };\n    /**\n    * Return the `Uint8Array` representation of the public key\n    * @returns {Uint8Array}\n    */\n    Pubkey.prototype.toBytes = function () {\n        try {\n            var retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.pubkey_toBytes(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayU8FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 1);\n            return v0;\n        }\n        finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    };\n    /**\n    * Derive a Pubkey from another Pubkey, string seed, and a program id\n    * @param {Pubkey} base\n    * @param {string} seed\n    * @param {Pubkey} owner\n    * @returns {Pubkey}\n    */\n    Pubkey.createWithSeed = function (base, seed, owner) {\n        _assertClass(base, Pubkey);\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        _assertClass(owner, Pubkey);\n        var ret = wasm.pubkey_createWithSeed(base.ptr, ptr0, len0, owner.ptr);\n        return Pubkey.__wrap(ret);\n    };\n    /**\n    * Derive a program address from seeds and a program id\n    * @param {any[]} seeds\n    * @param {Pubkey} program_id\n    * @returns {Pubkey}\n    */\n    Pubkey.createProgramAddress = function (seeds, program_id) {\n        var ptr0 = passArrayJsValueToWasm0(seeds, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        _assertClass(program_id, Pubkey);\n        var ret = wasm.pubkey_createProgramAddress(ptr0, len0, program_id.ptr);\n        return Pubkey.__wrap(ret);\n    };\n    /**\n    * Find a valid program address\n    *\n    * Returns:\n    * * `[PubKey, number]` - the program address and bump seed\n    * @param {any[]} seeds\n    * @param {Pubkey} program_id\n    * @returns {any}\n    */\n    Pubkey.findProgramAddress = function (seeds, program_id) {\n        var ptr0 = passArrayJsValueToWasm0(seeds, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        _assertClass(program_id, Pubkey);\n        var ret = wasm.pubkey_findProgramAddress(ptr0, len0, program_id.ptr);\n        return takeObject(ret);\n    };\n    return Pubkey;\n}());\nexport { Pubkey };\nvar SystemInstruction = /** @class */ (function () {\n    function SystemInstruction() {\n    }\n    SystemInstruction.prototype.__destroy_into_raw = function () {\n        var ptr = this.ptr;\n        this.ptr = 0;\n        return ptr;\n    };\n    SystemInstruction.prototype.free = function () {\n        var ptr = this.__destroy_into_raw();\n    };\n    /**\n    * @param {Pubkey} from_pubkey\n    * @param {Pubkey} to_pubkey\n    * @param {BigInt} lamports\n    * @param {BigInt} space\n    * @param {Pubkey} owner\n    * @returns {Instruction}\n    */\n    SystemInstruction.createAccount = function (from_pubkey, to_pubkey, lamports, space, owner) {\n        _assertClass(from_pubkey, Pubkey);\n        _assertClass(to_pubkey, Pubkey);\n        uint64CvtShim[0] = lamports;\n        var low0 = u32CvtShim[0];\n        var high0 = u32CvtShim[1];\n        uint64CvtShim[0] = space;\n        var low1 = u32CvtShim[0];\n        var high1 = u32CvtShim[1];\n        _assertClass(owner, Pubkey);\n        var ret = wasm.systeminstruction_createAccount(from_pubkey.ptr, to_pubkey.ptr, low0, high0, low1, high1, owner.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} from_pubkey\n    * @param {Pubkey} to_pubkey\n    * @param {Pubkey} base\n    * @param {string} seed\n    * @param {BigInt} lamports\n    * @param {BigInt} space\n    * @param {Pubkey} owner\n    * @returns {Instruction}\n    */\n    SystemInstruction.createAccountWithSeed = function (from_pubkey, to_pubkey, base, seed, lamports, space, owner) {\n        _assertClass(from_pubkey, Pubkey);\n        _assertClass(to_pubkey, Pubkey);\n        _assertClass(base, Pubkey);\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = lamports;\n        var low1 = u32CvtShim[0];\n        var high1 = u32CvtShim[1];\n        uint64CvtShim[0] = space;\n        var low2 = u32CvtShim[0];\n        var high2 = u32CvtShim[1];\n        _assertClass(owner, Pubkey);\n        var ret = wasm.systeminstruction_createAccountWithSeed(from_pubkey.ptr, to_pubkey.ptr, base.ptr, ptr0, len0, low1, high1, low2, high2, owner.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} pubkey\n    * @param {Pubkey} owner\n    * @returns {Instruction}\n    */\n    SystemInstruction.assign = function (pubkey, owner) {\n        _assertClass(pubkey, Pubkey);\n        _assertClass(owner, Pubkey);\n        var ret = wasm.systeminstruction_assign(pubkey.ptr, owner.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} pubkey\n    * @param {Pubkey} base\n    * @param {string} seed\n    * @param {Pubkey} owner\n    * @returns {Instruction}\n    */\n    SystemInstruction.assignWithSeed = function (pubkey, base, seed, owner) {\n        _assertClass(pubkey, Pubkey);\n        _assertClass(base, Pubkey);\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        _assertClass(owner, Pubkey);\n        var ret = wasm.systeminstruction_assignWithSeed(pubkey.ptr, base.ptr, ptr0, len0, owner.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} from_pubkey\n    * @param {Pubkey} to_pubkey\n    * @param {BigInt} lamports\n    * @returns {Instruction}\n    */\n    SystemInstruction.transfer = function (from_pubkey, to_pubkey, lamports) {\n        _assertClass(from_pubkey, Pubkey);\n        _assertClass(to_pubkey, Pubkey);\n        uint64CvtShim[0] = lamports;\n        var low0 = u32CvtShim[0];\n        var high0 = u32CvtShim[1];\n        var ret = wasm.systeminstruction_transfer(from_pubkey.ptr, to_pubkey.ptr, low0, high0);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} from_pubkey\n    * @param {Pubkey} from_base\n    * @param {string} from_seed\n    * @param {Pubkey} from_owner\n    * @param {Pubkey} to_pubkey\n    * @param {BigInt} lamports\n    * @returns {Instruction}\n    */\n    SystemInstruction.transferWithSeed = function (from_pubkey, from_base, from_seed, from_owner, to_pubkey, lamports) {\n        _assertClass(from_pubkey, Pubkey);\n        _assertClass(from_base, Pubkey);\n        var ptr0 = passStringToWasm0(from_seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        _assertClass(from_owner, Pubkey);\n        _assertClass(to_pubkey, Pubkey);\n        uint64CvtShim[0] = lamports;\n        var low1 = u32CvtShim[0];\n        var high1 = u32CvtShim[1];\n        var ret = wasm.systeminstruction_transferWithSeed(from_pubkey.ptr, from_base.ptr, ptr0, len0, from_owner.ptr, to_pubkey.ptr, low1, high1);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} pubkey\n    * @param {BigInt} space\n    * @returns {Instruction}\n    */\n    SystemInstruction.allocate = function (pubkey, space) {\n        _assertClass(pubkey, Pubkey);\n        uint64CvtShim[0] = space;\n        var low0 = u32CvtShim[0];\n        var high0 = u32CvtShim[1];\n        var ret = wasm.systeminstruction_allocate(pubkey.ptr, low0, high0);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} address\n    * @param {Pubkey} base\n    * @param {string} seed\n    * @param {BigInt} space\n    * @param {Pubkey} owner\n    * @returns {Instruction}\n    */\n    SystemInstruction.allocateWithSeed = function (address, base, seed, space, owner) {\n        _assertClass(address, Pubkey);\n        _assertClass(base, Pubkey);\n        var ptr0 = passStringToWasm0(seed, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        uint64CvtShim[0] = space;\n        var low1 = u32CvtShim[0];\n        var high1 = u32CvtShim[1];\n        _assertClass(owner, Pubkey);\n        var ret = wasm.systeminstruction_allocateWithSeed(address.ptr, base.ptr, ptr0, len0, low1, high1, owner.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} from_pubkey\n    * @param {Pubkey} nonce_pubkey\n    * @param {Pubkey} authority\n    * @param {BigInt} lamports\n    * @returns {Array<any>}\n    */\n    SystemInstruction.createNonceAccount = function (from_pubkey, nonce_pubkey, authority, lamports) {\n        _assertClass(from_pubkey, Pubkey);\n        _assertClass(nonce_pubkey, Pubkey);\n        _assertClass(authority, Pubkey);\n        uint64CvtShim[0] = lamports;\n        var low0 = u32CvtShim[0];\n        var high0 = u32CvtShim[1];\n        var ret = wasm.systeminstruction_createNonceAccount(from_pubkey.ptr, nonce_pubkey.ptr, authority.ptr, low0, high0);\n        return takeObject(ret);\n    };\n    /**\n    * @param {Pubkey} nonce_pubkey\n    * @param {Pubkey} authorized_pubkey\n    * @returns {Instruction}\n    */\n    SystemInstruction.advanceNonceAccount = function (nonce_pubkey, authorized_pubkey) {\n        _assertClass(nonce_pubkey, Pubkey);\n        _assertClass(authorized_pubkey, Pubkey);\n        var ret = wasm.systeminstruction_advanceNonceAccount(nonce_pubkey.ptr, authorized_pubkey.ptr);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} nonce_pubkey\n    * @param {Pubkey} authorized_pubkey\n    * @param {Pubkey} to_pubkey\n    * @param {BigInt} lamports\n    * @returns {Instruction}\n    */\n    SystemInstruction.withdrawNonceAccount = function (nonce_pubkey, authorized_pubkey, to_pubkey, lamports) {\n        _assertClass(nonce_pubkey, Pubkey);\n        _assertClass(authorized_pubkey, Pubkey);\n        _assertClass(to_pubkey, Pubkey);\n        uint64CvtShim[0] = lamports;\n        var low0 = u32CvtShim[0];\n        var high0 = u32CvtShim[1];\n        var ret = wasm.systeminstruction_withdrawNonceAccount(nonce_pubkey.ptr, authorized_pubkey.ptr, to_pubkey.ptr, low0, high0);\n        return Instruction.__wrap(ret);\n    };\n    /**\n    * @param {Pubkey} nonce_pubkey\n    * @param {Pubkey} authorized_pubkey\n    * @param {Pubkey} new_authority\n    * @returns {Instruction}\n    */\n    SystemInstruction.authorizeNonceAccount = function (nonce_pubkey, authorized_pubkey, new_authority) {\n        _assertClass(nonce_pubkey, Pubkey);\n        _assertClass(authorized_pubkey, Pubkey);\n        _assertClass(new_authority, Pubkey);\n        var ret = wasm.systeminstruction_authorizeNonceAccount(nonce_pubkey.ptr, authorized_pubkey.ptr, new_authority.ptr);\n        return Instruction.__wrap(ret);\n    };\n    return SystemInstruction;\n}());\nexport { SystemInstruction };\nexport function __wbindgen_json_serialize(arg0, arg1) {\n    var obj = getObject(arg1);\n    var ret = JSON.stringify(obj === undefined ? null : obj);\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}\n;\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n}\n;\nexport function __wbindgen_json_parse(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_instruction_new(arg0) {\n    var ret = Instruction.__wrap(arg0);\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_pubkey_new(arg0) {\n    var ret = Pubkey.__wrap(arg0);\n    return addHeapObject(ret);\n}\n;\nexport function __wbindgen_string_get(arg0, arg1) {\n    var obj = getObject(arg1);\n    var ret = typeof (obj) === 'string' ? obj : undefined;\n    var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}\n;\nexport function __wbindgen_is_undefined(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n}\n;\nexport function __wbindgen_string_new(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n}\n;\nexport function __wbindgen_number_get(arg0, arg1) {\n    var obj = getObject(arg1);\n    var ret = typeof (obj) === 'number' ? obj : undefined;\n    getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n    getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n}\n;\nexport function __wbindgen_number_new(arg0) {\n    var ret = arg0;\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_debug_104e10fa490af5d4(arg0) {\n    console.debug(getObject(arg0));\n}\n;\nexport function __wbg_error_009e67eab9c16665(arg0) {\n    console.error(getObject(arg0));\n}\n;\nexport function __wbg_info_44b510682aa2cf74(arg0) {\n    console.info(getObject(arg0));\n}\n;\nexport function __wbg_log_4989d5b00a0cc297(arg0) {\n    console.log(getObject(arg0));\n}\n;\nexport function __wbg_warn_f9b80af3c73d7193(arg0) {\n    console.warn(getObject(arg0));\n}\n;\nexport function __wbg_new_693216e109162396() {\n    var ret = new Error();\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_stack_0ddaca5d1abfb52f(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}\n;\nexport function __wbg_error_09919627ac0992f5(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    }\n    finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n}\n;\nexport function __wbg_new_949bbc1147195c4e() {\n    var ret = new Array();\n    return addHeapObject(ret);\n}\n;\nexport function __wbindgen_is_function(arg0) {\n    var ret = typeof (getObject(arg0)) === 'function';\n    return ret;\n}\n;\nexport function __wbindgen_is_object(arg0) {\n    var val = getObject(arg0);\n    var ret = typeof (val) === 'object' && val !== null;\n    return ret;\n}\n;\nexport function __wbg_next_c4151d46d5fa7097(arg0) {\n    var ret = getObject(arg0).next;\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_next_7720502039b96d00() {\n    return handleError(function (arg0) {\n        var ret = getObject(arg0).next();\n        return addHeapObject(ret);\n    }, arguments);\n}\n;\nexport function __wbg_done_b06cf0578e89ff68(arg0) {\n    var ret = getObject(arg0).done;\n    return ret;\n}\n;\nexport function __wbg_value_e74a542443d92451(arg0) {\n    var ret = getObject(arg0).value;\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_iterator_4fc4ce93e6b92958() {\n    var ret = Symbol.iterator;\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_get_4d0f21c2f823742e() {\n    return handleError(function (arg0, arg1) {\n        var ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments);\n}\n;\nexport function __wbg_call_888d259a5fefc347() {\n    return handleError(function (arg0, arg1) {\n        var ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments);\n}\n;\nexport function __wbg_newwithlength_75ee2b96c288e6bc(arg0) {\n    var ret = new Array(arg0 >>> 0);\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_set_1820441f7fb79aad(arg0, arg1, arg2) {\n    getObject(arg0)[arg1 >>> 0] = takeObject(arg2);\n}\n;\nexport function __wbg_isArray_eb7ad55f2da67dde(arg0) {\n    var ret = Array.isArray(getObject(arg0));\n    return ret;\n}\n;\nexport function __wbg_push_284486ca27c6aa8b(arg0, arg1) {\n    var ret = getObject(arg0).push(getObject(arg1));\n    return ret;\n}\n;\nexport function __wbg_values_364ae56c608e6824(arg0) {\n    var ret = getObject(arg0).values();\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_buffer_397eaa4d72ee94dd(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_new_a7ce447f15ff496f(arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n}\n;\nexport function __wbg_set_969ad0a60e51d320(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n}\n;\nexport function __wbg_length_1eb8fc608a0d4cdb(arg0) {\n    var ret = getObject(arg0).length;\n    return ret;\n}\n;\nexport function __wbg_instanceof_Uint8Array_08a1f3a179095e76(arg0) {\n    var ret = getObject(arg0) instanceof Uint8Array;\n    return ret;\n}\n;\nexport function __wbindgen_debug_string(arg0, arg1) {\n    var ret = debugString(getObject(arg1));\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n}\n;\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n}\n;\nexport function __wbindgen_rethrow(arg0) {\n    throw takeObject(arg0);\n}\n;\nexport function __wbindgen_memory() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n}\n;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","export * from \"./bridge_bg.js\";\n"],"sourceRoot":""}